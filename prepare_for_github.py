#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∫ –≤—ã–≥—Ä—É–∑–∫–µ –Ω–∞ GitHub
–£–¥–∞–ª—è–µ—Ç –Ω–µ–Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ —Å–æ–∑–¥–∞–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
"""

import os
import shutil
from pathlib import Path

def remove_file(file_path):
    """–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"""
    if os.path.exists(file_path):
        os.remove(file_path)
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω: {file_path}")
    else:
        print(f"‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω: {file_path}")

def remove_directory(dir_path):
    """–£–¥–∞–ª–∏—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"""
    if os.path.exists(dir_path):
        shutil.rmtree(dir_path)
        print(f"‚úÖ –£–¥–∞–ª–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {dir_path}")
    else:
        print(f"‚ö†Ô∏è  –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {dir_path}")

def create_gitkeep(file_path):
    """–°–æ–∑–¥–∞—Ç—å .gitkeep —Ñ–∞–π–ª"""
    with open(file_path, 'w') as f:
        f.write("# Keep this directory in Git\n")
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω: {file_path}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ GitHub"""
    print("üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ HSEConsultBot –∫ GitHub...")
    print("=" * 50)
    
    # –§–∞–π–ª—ã –∞–Ω–∞–ª–∏–∑–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏—è
    print("\nüìù –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∞–Ω–∞–ª–∏–∑–∞...")
    analysis_files = [
        "PROJECT_ANALYSIS.md",
        "–û–ø–∏—Å–∞–Ω–∏–µ.md", 
        "PROJECT_OVERVIEW.md",
        "IMPROVEMENTS_ROADMAP.md",
        "PRIVACY_PROTECTION.md",
        "KNOWLEDGE_BASE_INTEGRATION.md"
    ]
    
    for file in analysis_files:
        remove_file(file)
    
    # –§–∞–π–ª—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    print("\nüß™ –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏...")
    dev_files = [
        "test_knowledge_base.py",
        "expand_faq.py", 
        "json_to_csv.py",
        "faq_ohs_ru_links_extended.json",
        "README_MINIMAL.md",
        "prepare_for_github.py"
    ]
    
    for file in dev_files:
        remove_file(file)
    
    # –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤
    print("\nüìä –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤...")
    if os.path.exists("logs"):
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ logs, –∫—Ä–æ–º–µ .gitkeep
        for file in os.listdir("logs"):
            if file != ".gitkeep":
                file_path = os.path.join("logs", file)
                if os.path.isfile(file_path):
                    os.remove(file_path)
                    print(f"‚úÖ –£–¥–∞–ª–µ–Ω –ª–æ–≥: {file}")
                elif os.path.isdir(file_path):
                    shutil.rmtree(file_path)
                    print(f"‚úÖ –£–¥–∞–ª–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤: {file}")
        
        # –°–æ–∑–¥–∞–µ–º .gitkeep –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        gitkeep_path = os.path.join("logs", ".gitkeep")
        if not os.path.exists(gitkeep_path):
            create_gitkeep(gitkeep_path)
    else:
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é logs —Å .gitkeep
        os.makedirs("logs", exist_ok=True)
        create_gitkeep("logs/.gitkeep")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤...")
    required_files = [
        "README.md",
        "LICENSE", 
        "requirements.txt",
        "docker-compose.yml",
        "Dockerfile",
        ".envExample",
        ".gitignore",
        "QUICKSTART.md",
        "ASSISTANT_GUIDE.md",
        "CONTRIBUTING.md",
        "CHANGELOG.md",
        "main.py"
    ]
    
    missing_files = []
    for file in required_files:
        if not os.path.exists(file):
            missing_files.append(file)
        else:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω: {file}")
    
    if missing_files:
        print(f"\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã: {missing_files}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    print("\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...")
    required_dirs = [
        "bot",
        "ai", 
        "database",
        "services",
        "utils",
        "admin"
    ]
    
    missing_dirs = []
    for dir_name in required_dirs:
        if not os.path.exists(dir_name):
            missing_dirs.append(dir_name)
        else:
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {dir_name}")
    
    if missing_dirs:
        print(f"\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏: {missing_dirs}")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –∑–Ω–∞–Ω–∏–π
    print("\nüìö –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π...")
    if os.path.exists("faq_ohs_ru_links.json"):
        size = os.path.getsize("faq_ohs_ru_links.json")
        print(f"‚úÖ –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π: {size:,} –±–∞–π—Ç")
    else:
        print("‚ùå –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return False
    
    # –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    print("\nüéâ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("=" * 50)
    print("üìã –ì–æ—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è GitHub:")
    
    # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä
    total_size = 0
    file_count = 0
    
    for root, dirs, files in os.walk("."):
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∫—Ä—ã—Ç—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
        dirs[:] = [d for d in dirs if not d.startswith('.')]
        
        for file in files:
            if not file.startswith('.'):
                file_path = os.path.join(root, file)
                if os.path.exists(file_path):
                    size = os.path.getsize(file_path)
                    total_size += size
                    file_count += 1
    
    print(f"üìä –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: {file_count}")
    print(f"üìä –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: {total_size:,} –±–∞–π—Ç ({total_size/1024/1024:.1f} MB)")
    
    print("\nüöÄ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –≤—ã–≥—Ä—É–∑–∫–µ –Ω–∞ GitHub!")
    print("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: git add . && git commit -m 'Initial commit' && git push")
    
    return True

if __name__ == "__main__":
    try:
        success = main()
        if success:
            print("\n‚úÖ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        else:
            print("\n‚ùå –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏!")
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ: {e}")
