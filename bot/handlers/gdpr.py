"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (–§–ó-152)
"""
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from bot.keyboards.main_menu import get_confirmation_keyboard
from bot.states.conversation import GDPRStates
from database.db import get_session
from database.crud import delete_user_data, create_audit_log, get_user
from database.models import User
from utils.logger import setup_logger

logger = setup_logger()
router = Router()


@router.message(Command("gdpr"))
async def cmd_gdpr(message: Message, db_user: User):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /gdpr - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ
        db_user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ –ë–î
    """
    # –ü–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –ë–î –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    async with get_session() as session:
        fresh_user = await get_user(session, message.from_user.id)
        if not fresh_user:
            await message.answer("‚ùå –û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.")
            return
        
        gdpr_text = f"""
üîí <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ (–§–ó-152)</b>

<b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ:</b>
‚Ä¢ Telegram ID: {fresh_user.id}
‚Ä¢ –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{fresh_user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω'}
‚Ä¢ –ò–º—è: {fresh_user.first_name or '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}
‚Ä¢ –†–æ–ª—å: {fresh_user.role.value}
‚Ä¢ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {fresh_user.created_at.strftime('%d.%m.%Y %H:%M')}
‚Ä¢ –°–æ–≥–ª–∞—Å–∏–µ –ø—Ä–∏–Ω—è—Ç–æ: {'‚úÖ –î–∞' if fresh_user.gdpr_accepted else '‚ùå –ù–µ—Ç'}

<b>–ö–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –º—ã —Ö—Ä–∞–Ω–∏–º:</b>
‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª–µ (ID, –∏–º—è, username)
‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤
‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞
‚Ä¢ –õ–æ–≥–∏ –¥–µ–π—Å—Ç–≤–∏–π (–¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)

<b>–ö–∞–∫ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ:</b>
‚Ä¢ –î–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω—ã—Ö —É—Å–ª—É–≥
‚Ä¢ –î–ª—è —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –æ—Ç–≤–µ—Ç–æ–≤
‚Ä¢ –î–ª—è –≤–µ–¥–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏

<b>–í–∞—à–∏ –ø—Ä–∞–≤–∞:</b>
‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö (–∫–æ–º–∞–Ω–¥–∞ –Ω–∏–∂–µ)

‚ö†Ô∏è <b>–£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö</b>
–í—ã –º–æ–∂–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–∏—Å—Ç–µ–º—ã.
–ü–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.

–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤—å—Ç–µ: /delete_my_data
        """
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è —Å–æ–≥–ª–∞—à–µ–Ω–∏—è
        from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
        gdpr_keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üìÑ –ß–∏—Ç–∞—Ç—å —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ", callback_data="gdpr_read")]
        ])
        
        await message.answer(gdpr_text, parse_mode="HTML", reply_markup=gdpr_keyboard)


@router.message(Command("delete_my_data"))
async def cmd_delete_my_data(message: Message, state: FSMContext, db_user: User):
    """
    –ó–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    
    Args:
        message: –°–æ–æ–±—â–µ–Ω–∏–µ
        state: FSM —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        db_user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ –ë–î
    """
    await message.answer(
        "‚ö†Ô∏è <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö</b>\n\n"
        "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ?\n\n"
        "–ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã:\n"
        "‚Ä¢ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å\n"
        "‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –æ—Ç–≤–µ—Ç–æ–≤\n"
        "‚Ä¢ –í—Å—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n\n"
        "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ <b>–Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ</b>!",
        reply_markup=get_confirmation_keyboard("delete_data"),
        parse_mode="HTML"
    )
    await state.set_state(GDPRStates.waiting_for_delete_confirmation)


@router.callback_query(F.data == "confirm_delete_data")
async def confirm_delete_data(callback: CallbackQuery, state: FSMContext, db_user: User):
    """
    –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    
    Args:
        callback: Callback query
        state: FSM —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        db_user: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–∑ –ë–î (–º–æ–∂–µ—Ç –±—ã—Ç—å detached!)
    """
    # –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º callback.from_user.id –∫–∞–∫ –∏—Å—Ç–æ—á–Ω–∏–∫ –∏—Å—Ç–∏–Ω—ã!
    # db_user –º–æ–∂–µ—Ç –±—ã—Ç—å detached –æ—Ç —Å–µ—Å—Å–∏–∏ –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥–∞–Ω–Ω—ã–µ
    callback_user_id = callback.from_user.id
    callback_username = callback.from_user.username
    
    logger.warning(
        f"–ó–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback_user_id} "
        f"(@{callback_username}) —á–µ—Ä–µ–∑ callback"
    )
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: —Å–≤–µ—Ä—è–µ–º —Å db_user (–µ—Å–ª–∏ –æ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π)
    if hasattr(db_user, 'id') and db_user.id != callback_user_id:
        logger.error(
            f"SECURITY ALERT: –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ user_id! "
            f"db_user.id={db_user.id}, callback.from_user.id={callback_user_id}"
        )
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.", show_alert=True)
        return
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¢–û–õ–¨–ö–û callback_user_id –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    logger.warning(f"–ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —É–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {callback_user_id} (@{callback_username})")
    
    # –õ–æ–≥–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ
    async with get_session() as session:
        await create_audit_log(
            session,
            user_id=callback_user_id,
            action="data_deletion_requested",
            details={
                "username": callback_username,
                "callback_user_id": callback_user_id,
                "db_user_id": db_user.id if hasattr(db_user, 'id') else None,
                "confirmed": True
            }
        )
        
        # –£–¥–∞–ª—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –∏—Å–ø–æ–ª—å–∑—É–µ–º –¢–û–õ–¨–ö–û callback_user_id
        await delete_user_data(session, callback_user_id)
    
    logger.warning(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {callback_user_id} (@{callback_username}) —É–¥–∞–ª–∏–ª –≤—Å–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ")
    
    await callback.message.edit_text(
        "‚úÖ <b>–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã</b>\n\n"
        "–í—Å–µ –≤–∞—à–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ —Å–∏—Å—Ç–µ–º—ã.\n\n"
        "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –Ω–∞—à–∏–º –±–æ—Ç–æ–º!\n"
        "–ï—Å–ª–∏ –∑–∞—Ö–æ—Ç–∏—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start",
        parse_mode="HTML"
    )
    
    await state.clear()
    await callback.answer()


@router.callback_query(F.data == "cancel_delete_data")
async def cancel_delete_data(callback: CallbackQuery, state: FSMContext):
    """
    –û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
    
    Args:
        callback: Callback query
        state: FSM —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    """
    await callback.message.edit_text(
        "‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–º–µ–Ω–µ–Ω–æ.\n\n"
        "–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã."
    )
    
    await state.clear()
    await callback.answer()

